{"version":3,"sources":["pwa/home.js","pwa/aboutme.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","count","setCount","className","Badge","pill","variant","Button","onClick","ProgressBar","now","label","AboutMe","Card","style","width","Body","Title","Subtitle","Text","Link","href","App","dark","isDarkMode","theme","setTheme","useEffect","page","setPage","height","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","ButtonGroup","toggle","name","value","map","radio","idx","ToggleButton","type","checked","onChange","e","currentTarget","renderPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0PAGO,SAASA,IAEZ,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEF,OACE,gCACE,yBAAQC,UAAU,aAAlB,UACE,eAACC,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,UAApB,UACG,IACAL,EAAO,OAEV,gCACE,+BACE,cAACM,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAASD,EAAQ,IAChCE,UAAU,kBAFZ,iBAOF,+BACE,cAACI,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAASD,EAAQ,IAChCE,UAAU,kBAFZ,uBAUN,cAACM,EAAA,EAAD,CAAaC,IAAKT,EAAOU,MAAK,UAAKV,EAAL,U,YChC7B,SAASW,IACd,OACA,8BACA,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,SAAN,CAAef,UAAU,kBAAzB,2BACA,cAACU,EAAA,EAAKM,KAAN,6GAIA,cAACN,EAAA,EAAKO,KAAN,CAAWC,KAAK,IAAhB,uBACA,cAACR,EAAA,EAAKO,KAAN,CAAWC,KAAK,IAAhB,iCCRC,SAASC,IAEd,MAA2BtB,mBAAS,SAApC,mBAAOuB,EAAP,KAAaC,EAAb,KACA,EAA0BxB,mBAAS,oCAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IAAIF,EAAQ,eAEZA,GAAkB,UAATF,EAAmB,QAAU,YAEtCG,EADAD,GAFa,iBAIb,CAACF,IAEH,IAKA,EAAwBvB,mBAAS,WAAjC,mBAAO4B,EAAP,KAAaC,EAAb,KAeA,OAEE,sBAAKf,MANS,CACdgB,OAAS,SAKc3B,UAAWsB,EAAlC,UACA,eAACM,EAAA,EAAD,CAAQC,GAAIT,EAAMU,OAAO,KAAzB,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcb,KAAK,QAAnB,2BACA,cAACU,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKpC,UAAU,UAAf,UACE,cAACoC,EAAA,EAAInB,KAAL,CAAUZ,QAAS,kBAAMqB,EAAQ,SAAjC,kBACA,cAACU,EAAA,EAAInB,KAAL,CAAUZ,QAAS,kBAAMqB,EAAQ,YAAjC,uBAGJ,cAACW,EAAA,EAAD,CAAaC,QAAM,EAAnB,SAhCW,CACb,CAAEC,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,QAASC,MAAO,UA+BRC,KAAI,SAACC,EAAOC,GAAR,OACV,cAACC,EAAA,EAAD,CAEEC,KAAK,QACL1C,QAAQ,YACRoC,KAAK,QACLC,MAAOE,EAAMF,MACbM,QAAS1B,IAASsB,EAAMF,MACxBO,SAAU,SAACC,GAAD,OAAO3B,EAAW2B,EAAEC,cAAcT,QAP9C,SASGE,EAAMH,MARFI,WA5BA,SAAClB,GAClB,OAAOA,GACL,IAAK,OACH,OAAO,cAAC7B,EAAD,IACT,IAAK,UACH,OAAO,cAACa,EAAD,KAqCPyC,CAAWzB,MCpEnB,IAYe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC1C,EAAD,IACF2C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.506028d2.chunk.js","sourcesContent":["import {Badge, Button, ProgressBar} from 'react-bootstrap';\nimport {useState} from 'react'\n\nexport function Home() {\n\n    const [count, setCount] = useState(0); \n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Badge pill variant=\"primary\">\n          {\" \"}\n          {count}{\" \"}\n        </Badge>\n        <div>\n          <span>\n            <Button\n              onClick={() => setCount(count + 1)}\n              className=\"btn btn-primary\"\n            >\n              +\n            </Button>\n          </span>\n          <span>\n            <Button\n              onClick={() => setCount(count - 1)}\n              className=\"btn btn-warning\"\n            >\n              -\n            </Button>\n          </span>\n        </div>\n      </header>\n\n      <ProgressBar now={count} label={`${count}%`} />\n    </div>\n  );\n}\n","import {Card} from 'react-bootstrap';\n\nexport function AboutMe() {\n  return(\n  <div>\n  <Card style={{ width: \"18rem\" }}>\n    <Card.Body>\n      <Card.Title>Card Title</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n      <Card.Link href=\"#\">Card Link</Card.Link>\n      <Card.Link href=\"#\">Another Link</Card.Link>\n    </Card.Body>\n  </Card>\n  </div>);\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport { useEffect, useState } from 'react';\nimport { Container, ToggleButton, ButtonGroup, Button, Navbar, Nav, Form, FormControl } from 'react-bootstrap'\nimport {Home} from './pwa/home';\nimport {AboutMe} from './pwa/aboutme'\n\nexport function App(){\n  \n  const [dark, isDarkMode] = useState('light');\n  const [theme, setTheme] = useState('p-3 mb-2 bg-secondary text-white');\n  \n  useEffect(() => {\n    var theme = \"p-3 mb-2 bg-\";\n    const text = \" text-white\";\n    theme += dark === 'light' ? \"light\" : \"secondary\";\n    theme += text;\n    setTheme(theme);\n  },[dark]);\n\n  const radios = [\n    { name: 'Dark', value: 'dark' },\n    { name: 'Light', value: 'light' }\n  ];\n\n  const [page, setPage] = useState('aboutMe');\n\n  const renderPage = (page) =>{\n    switch(page){\n      case 'home':\n        return <Home />\n      case 'aboutMe':\n        return <AboutMe />  \n    }\n  } \n\n  var rootStyle = {\n    height : '100vh'\n  }\n\n  return (\n\n    <div style={rootStyle} className={theme}>\n    <Navbar bg={dark} expand=\"lg\">\n      <Navbar.Brand href=\"#home\">AbhiLearn.com</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link onClick={() => setPage('home')} >Home</Nav.Link>\n          <Nav.Link onClick={() => setPage('aboutMe') }>Link</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <ButtonGroup toggle>\n            {radios.map((radio, idx) => (\n              <ToggleButton\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={dark === radio.value}\n                onChange={(e) => isDarkMode(e.currentTarget.value)}\n              >\n                {radio.name}\n              </ToggleButton>\n            ))}\n          </ButtonGroup>\n    </Navbar>\n      {\n        renderPage(page)\n      }\n    \n  </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}